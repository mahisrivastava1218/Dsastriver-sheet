//approach1

var rotateString = function(s, goal) {
    if (s.length !== goal.length) return false;
    for(let i=0;i<s.length;i++){
     if(s===goal) return true;
     let first=s[0];
      s=s.slice(1,s.length)+first;
     console.log(s);
    }
    return false;
   };
   //tc-O(n^2) sc-O(1)

//approach2
var rotateString = function(s, goal) {
        let arr=s.split("");
        for(let i=0;i<s.length;i++){
            let first=arr[0];
            for(let j=0;j<s.length-1;j++){
                arr[j]=arr[j+1];
            }
            arr[s.length-1]=first;
            if(arr.join("")===goal){
                return true;
            }
        }
        return false;
    };
    //tc-O(n^2) sc-O(n)
//approach 3
    var rotateString = function(s, goal) {
    if (s.length !== goal.length) return false;
    return (s + s).includes(goal);
    };
    //time complexity-O(n) space complexity-O(n)


//optimize approach
   //KMP algorithm
var findLPS= function(pat){
    let n=pat.length;
    let lps=new Array(n).fill(0);
    let len=0;
    lps[0]=0;
    let i=1;
    while(i<n){
        if(pat[i]===pat[len]){
            len++;
            lps[i]=len;
            i++;
        }else{
            if(len!==0){
                len = lps[len-1];
            }else{
                lps[i]=0;
                i++;
            }
        }

    }
    return lps;
 }
var rotateString = function(s, goal) {
    if (s.length !== goal.length) return false;
      let string = s+s;
      let n=string.length;
      let m=goal.length;
      let lps=findLPS(goal);
      let i=0;
      let j=0;
      console.log(lps);
      while(i<n){
        if(goal[j]===string[i]){
            console.log(goal[j]);
            console.log(string[i]);
            i++;
            j++;
            if(j===m){
                return true
            }    
        }
         else if(i<n && goal[j]!==string[i]){
        if(j!==0){
            j=lps[j-1];
        }else{
            i++;
        }
      }
      console.log(j);
    }
      return false;
};
console.log(rotateString("abcde","cdeab"));
console.log(rotateString("abcde","abced"));
console.log(rotateString("abcde","acdea"));
//abcdeabcde cdeab
